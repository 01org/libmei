cmake_minimum_required(VERSION 3.0)
project(libmei)


set(LICENSE BSD)
set(MEI_VERSION_MAJOR 1)
set(MEI_VERSION_MINOR 1)
set(MEI_VERSION_PATCH 0)
set(MEI_VERSION_STRING ${MEI_VERSION_MAJOR}.${MEI_VERSION_MINOR}.${MEI_VERSION_PATCH})

set(MEI_SOURCES mei.c)
set(MEI_HEADERS libmei.h)

add_library(mei SHARED ${MEI_SOURCES} ${MEI_HEADERS})
set_target_properties(mei PROPERTIES PUBLIC_HEADER libmei.h)
set_target_properties(mei PROPERTIES VERSION ${MEI_VERSION_STRING})
set_target_properties(mei PROPERTIES SOVERSION ${MEI_VERSION_STRING})

install(TARGETS mei
        LIBRARY DESTINATION lib
	PUBLIC_HEADER DESTINATION include)

# Documentation
find_package(Doxygen)
if(DOXYGEN_FOUND)
set(INPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
set(OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/doc/Doxyfile.in
	${CMAKE_CURRENT_BINARY_DIR}/doc/Doxyfile @ONLY)

add_custom_target(doc
	${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/doc/Doxyfile
	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	COMMENT "Generating  documentation with Doxygen" VERBATIM)
endif(DOXYGEN_FOUND)


# CPack
set(CPACK_PACKAGE_VERSION_MAJOR ${MEI_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${MEI_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${MEI_VERSION_PATCH})
set(CPACK_PACKAGE_VENDOR "Intel, Inc")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Interface Library")
set(CPACK_PACKAGE_CONTACT "linux-mei@linux.intel.com")
set(CPACK_PACKAGE_DESCRIPTION_FILE ${PROJECT_SOURCE_DIR}/DESCRIPTION)

set(CPACK_SOURCE_GENERATOR "TBZ2")
set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${MEI_VERSION_STRING})
add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)

# RPMB Specific
set(CPACK_RPM_PACKAGE_RELEASE 1)
set(CPACK_RPM_PACKAGE_LICENSE ${LICENSE})
set(CPACK_RPM_PACKAGE_GROUP "Development")

#Debian Specific
set(CPACK_DEBIAN_PACKAGE_VERSION 1)
set(CPACK_DEBIAN_PACKAGE_SECTION "Development")

set(CPACK_GENERATOR "RPM;DEB")

include(CPack)

